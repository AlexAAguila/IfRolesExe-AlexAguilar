@model IEnumerable<PayPal.Models.Product>

@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<p>
</p>

@foreach (var item in Model) {
    <div class="d-flex flex-nowrap">
        <div class="col-sm-4">
            <div class="row">
                <div class="col-lg-6"></div>
                <div class="col-lg-6">
                    <img src="/images/@Html.DisplayFor(modelItem => item.ImageName)" alt="@Html.DisplayFor(modelItem => item.ProductName)" style="max-width: 100%;" />

                    <div class="" style="color:#CC0000; font-size: 1.5em;text-align: center;">
                        <span>$</span><span id="itemPrice_@item.ID">@Html.DisplayFor(modelItem => item.Price)</span>
                        <span id="currency">CAD</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6" style="padding:20px;">@Html.DisplayFor(modelItem => item.Description)</div>
        <div>
            @if (User.Identity.IsAuthenticated)
            {
                <div  id="button-container">
                    <div class="col-sm-12">
                        <button id="addButton_@item.ID" onclick="AddOne(@item.ID)" class="btn btn-primary" style="border-color:#6E0B14; background-color: #6E0B14; width:100%">Add to Cart</button>
                    </div>
                    <div class="col-sm-12">
                        <button id="removeButton_@item.ID" onclick="MinusOne(@item.ID)" class="btn btn-primary" style="border-color:rgb(170, 170, 170); background-color: rgb(170, 170, 170);">Remove from Cart</button>
                    </div>
                    <div class="" style="display: flex; justify-content: space-between; flex-direction: row; ">
                                            <div>
                            <h6 style="color:#CC0000; font-size: 1.5em;">Qty</h6>
                        </div>
                        <div>
                            <h6 style="color:#CC0000; font-size: 1.5em;">Amount</h6>
                        </div>
                    </div>
                    <hr/>
                    <div style="display: flex; justify-content: space-around; flex-direction: row;">
                        <div class="col-sm-6">
                            <span id="qty_@item.ID" style="display:flex; justify-content:center">0</span>
                        </div>
                        <div class="col-sm-6" style="width:100px;">
                            <p>$<span id="total_@item.ID">0</span> CAD</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


  
      



<hr />
}
<div id="totals" style="display: flex; flex-direction:column; align-items:flex-end" >
<div class="" style="display: flex; justify-content: space-between; flex-direction: row; ">
    <div>
        <h2 style="color:#CC0000; font-size: 1.5em; padding-right:15px">Items</h2>
    </div>
    <div>
        <h2 style="color:#CC0000; font-size: 1.5em;">Amount</h2>
    </div>
</div>
<hr style="width:200px" />
<div style="display: flex; justify-content: space-around; flex-direction: row;">
    <div class="col-sm-6">
            <span id="totalItems">0</span>
    </div>
    <div class="col-sm-6" style="width:100px; display:flex;">
            <p style="width:100px;">$<span id="grandTotal">0</span> CAD</p>
    </div>
</div>
</div>

<input id="currency" type="hidden" value="USD" />

<div class="row" style="display:flex; justify-content:flex-end">
    <div class="offset-2 col-sm-6">
        <div id="paypal-button-container"></div>
    </div>
</div>
<div id="paypal-button-container"></div>

<script src="https://www.paypal.com/sdk/js?client-id=AcYzUTriY360UFrFnBT_Tns0NkqucbwhYUVTnIFEa6zp1QpPScRPxWqiFot7SYxKTX5JL2wl0d16pFn7"></script>
<script>
    function AddOne(id) {
        var qty = document.getElementById('qty_' + id);
        var total = document.getElementById('total_' + id);
        var price = document.getElementById('itemPrice_' + id);
        var grandTotal = document.getElementById('grandTotal');
        var totalItems = document.getElementById('totalItems');
        var qtyValue = parseInt(qty.innerText);
        qtyValue++;
        qty.innerText = qtyValue;
        total.innerText = (qtyValue * price.innerText).toFixed(2);
        grandTotal.innerText = (parseFloat(grandTotal.innerText) + parseFloat(price.innerText)).toFixed(2);
        totalItems.innerText = parseInt(totalItems.innerText) + 1;
    }

    function MinusOne(id) {
        var qty = document.getElementById('qty_' + id);
        var total = document.getElementById('total_' + id);
        var price = document.getElementById('itemPrice_' + id);
        var grandTotal = document.getElementById('grandTotal');
        var totalItems = document.getElementById('totalItems');
        var qtyValue = parseInt(qty.innerText);
        if (qtyValue > 0) {
            qtyValue--;
            qty.innerText = qtyValue;
            total.innerText = (qtyValue * price.innerText).toFixed(2);
            grandTotal.innerText = (parseFloat(grandTotal.innerText) - parseFloat(price.innerText)).toFixed(2);
            totalItems.innerText = parseInt(totalItems.innerText) - 1;

        }
    }
</script>
<script>
    paypal.Buttons({
        // Set up the transaction
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: parseFloat(document.getElementById('grandTotal').innerText),
                        currency:
                            document.getElementById('currency').value
                    }
                }]
            });
        },

        // Finalize the transaction
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (details) {

                console.log(details);
                // Redirect to the PayPalConfirmation action method
                window.location.href =
                    '/Home/PayPalConfirmation?TransactionId=' +
                    encodeURIComponent(details.id) + '&Amount=' +
                    encodeURIComponent(details.purchase_units[0]
                        .amount.value) + '&PayerName=' +
                    encodeURIComponent(details.payer.name.given_name)+ '&PayerEmail=' +
                    encodeURIComponent(details.payer.email_address)+ '&PaymentMethod=' +
                    encodeURIComponent('PayPal');
                    
            });
        },


        onCancel: function (data) {
            alert('Transaction was cancelled.');
        },
        onError: function (err) {
            alert('An error occurred during the transaction.');
        },
        style: {
            layout: 'horizontal', // 'vertical', 'horizontal'
            color: 'silver',      // 'gold', 'blue', 'silver', 'black'
            shape: 'rect',      // 'rect', 'pill'
            label: 'checkout'     // 'checkout', 'pay', 'buynow', 'paypal'
        }
    }).render('#paypal-button-container');
</script>

